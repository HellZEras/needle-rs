{"$message_type":"diagnostic","message":"transmute used without annotations","code":{"code":"clippy::missing_transmute_annotations","explanation":null},"level":"warning","spans":[{"file_name":"src\\injector.rs","byte_start":1867,"byte_end":1876,"line_start":35,"line_end":35,"column_start":90,"column_end":99,"is_primary":true,"text":[{"text":"        let thread = create_remote_thread(self.handle, null_mut(), 0, unsafe { std::mem::transmute(loadlib_func) }, buffer, 0, null_mut())?;","highlight_start":90,"highlight_end":99}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::missing_transmute_annotations)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding missing annotations","code":null,"level":"help","spans":[{"file_name":"src\\injector.rs","byte_start":1867,"byte_end":1876,"line_start":35,"line_end":35,"column_start":90,"column_end":99,"is_primary":true,"text":[{"text":"        let thread = create_remote_thread(self.handle, null_mut(), 0, unsafe { std::mem::transmute(loadlib_func) }, buffer, 0, null_mut())?;","highlight_start":90,"highlight_end":99}],"label":null,"suggested_replacement":"transmute::<*mut winapi::shared::minwindef::__some_function, std::option::Option<unsafe extern \"system\" fn(*mut winapi::ctypes::c_void) -> u32>>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: transmute used without annotations\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\injector.rs:35:90\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let thread = create_remote_thread(self.handle, null_mut(), 0, unsafe { std::mem::transmute(loadlib_func) }, buffer, 0, null_mut())?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: consider adding missing annotations: `transmute::<*mut winapi::shared::minwindef::__some_function, std::option::Option<unsafe extern \"system\" fn(*mut winapi::ctypes::c_void) -> u32>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(clippy::missing_transmute_annotations)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 1 warning emitted\u001b[0m\n\n"}
